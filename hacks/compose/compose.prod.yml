services:
  traefik:
    image: traefik:v3.3.2
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - --entrypoints.websecure.address=:443
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=mohammadne.dev@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"       # Temporarily expose HTTP for redirection
      - "443:443"     # HTTPS
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"
    networks:
      - internal

  postgres:
    image: postgres:17.4-bookworm
    environment:
      POSTGRES_ROOT_PASSWORD: 9xz3jrd8wf
      POSTGRES_DATABASE: porsesh_db
      POSTGRES_USER: porsesh_user
      POSTGRES_PASSWORD: 9xz3jrd8wf
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  redis:
    image: redis:7.4.2-bookworm
    volumes:
      - redis_data:/data
    networks:
      - internal

  porsesh:
    image: ghcr.io/mohammadne/porsesh:v0.0.1
    restart: unless-stopped
    command:
      - --environment=prod
    environment:
      PORSESH_POSTGRES_HOST: postgres
      PORSESH_POSTGRES_PORT: 5432
      PORSESH_POSTGRES_USER: porsesh_user
      PORSESH_POSTGRES_PASSWORD: 9xz3jrd8wf
      PORSESH_POSTGRES_DATABASE: porsesh_db
      PORSESH_REDIS_ADDRESS: redis:6379
      PORSESH_REDIS_USERNAME: 
      PORSESH_REDIS_PASSWORD: 
      PORSESH_REDIS_DB: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.porsesh.rule=Host(`porsesh.mohammadne.ir`)"
      - "traefik.http.routers.porsesh.entrypoints=websecure"
      - "traefik.http.routers.porsesh.tls.certresolver=myresolver"
      - "traefik.http.services.porsesh.loadbalancer.server.port=8088"
    depends_on:
      - postgres
      - redis
    networks:
      - internal

volumes:
  postgres_data:
  redis_data:

networks:
  internal:
    driver: bridge
